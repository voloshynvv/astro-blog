---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import { pluralize } from '@/utils/pluralize';

import BlogLayout from '@/layouts/BlogLayout.astro';
import Post from '@/components/Post.astro';

export const getStaticPaths = (async ({ paginate }) => {
  const categories = await getCollection('categories');
  const posts = await getCollection('blog');

  return categories.flatMap((category) => {
    const filteredPosts = posts.filter((post) => post.data.categories.some((postCat) => postCat.id === category.id));

    return paginate(filteredPosts, {
      params: { categoryId: category.id },
      props: { category },
      pageSize: 1,
    });
  });
}) satisfies GetStaticPaths;

const { page, category } = Astro.props;
---

<BlogLayout>
  <p class="border-b border-t py-3 font-medium">{pluralize(page.total, 'post')} in total from #{category.data.name}</p>

  {page.data.map((p) => <Post post={p} />)}

  <div class="flex">
    {page.url.prev ? <a href={page.url.prev}>Previous</a> : null}
    {page.url.next ? <a href={page.url.next}>Next</a> : null}
  </div>
</BlogLayout>
