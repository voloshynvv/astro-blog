---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import { pluralize } from '@/utils/pluralize';

import BlogLayout from '@/layouts/BlogLayout.astro';
import Post from '@/components/Post.astro';

export const getStaticPaths = (async ({ paginate }) => {
  const [authors, posts] = await Promise.all([getCollection('authors'), getCollection('blog')]);

  return authors.flatMap((author) => {
    const filteredPosts = posts.filter((post) => post.data.author.id === author.id);

    return paginate(filteredPosts, {
      params: { authorId: author.id },
      props: { author },
      pageSize: 1,
    });
  });
}) satisfies GetStaticPaths;

const { page, author } = Astro.props;
---

<BlogLayout>
  <p class="border-b border-t py-3 font-medium">{pluralize(page.total, 'blog post')} in total by {author.data.name}</p>

  {page.data.map((p) => <Post post={p} />)}

  <div class="flex">
    {page.url.prev ? <a href={page.url.prev}>Previous</a> : null}
    {page.url.next ? <a href={page.url.next}>Next</a> : null}
  </div>
</BlogLayout>
